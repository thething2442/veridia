# netlify.toml

[build]
  # The command to run to build your Astro project.
  # This will execute `astro build` as defined in your package.json.
  command = "npm run build"

  # The directory that contains the deployable static assets (your frontend HTML, CSS, JS).
  # When using @astrojs/node with output: 'server', Astro puts static assets in 'dist/client'.
  publish = "dist/client"

# This section configures Netlify Functions (or serverless functions).
# When using @astrojs/node, Astro compiles your server-side code into a Node.js server
# that Netlify can run as a serverless function.
[functions]
  # The directory where Astro's Node adapter places the server-side build output.
  # This is typically 'dist/server'.
  directory = "dist/server"

  # The main entry file for your server-side function.
  # After running `npm run build`, you should verify the exact name of the main
  # entry file in your `dist/server` directory. It's often `entry.mjs` or `index.mjs`.
  # If you find a different name, update this line accordingly.
  main = "entry.mjs" # <-- IMPORTANT: Verify this file name after building!

# This section sets up redirects/rewrites.
# For an SSR application, you typically want all requests to be handled by your
# serverless function, which then serves the correct page (static or dynamic).
[[redirects]]
  from = "/*" # Match all incoming requests
  to = "/.netlify/functions/entry" # Rewrite to your serverless function's endpoint
  status = 200 # Return a 200 OK status for successful rewrites
  force = true # Force the rewrite, even if a static file exists (important for SSR)

# You might also need to set environment variables for your build or runtime.
# For example, if your frontend needs to know the backend API URL.
[build.environment]
  # Example: Make your backend API URL available to your frontend build.
  # This corresponds to `import.meta.env.PUBLIC_VERIDIA_API_POST` in your Astro code.
  # Replace with your actual deployed backend URL (e.g., your Render backend URL).
  PUBLIC_VERIDIA_API_POST = "https://webanalyzer-veridia.onrender.com/web-analyzer" # Replace with your deployed backend URL
