# netlify.toml

[build]
  # The command to run to build your Astro project.
  command = "npm run build"

  # === FIX START ===
  # The directory that contains the deployable static assets (your frontend HTML, CSS, JS).
  # When using @astrojs/netlify adapter with output: 'server',
  # the static client assets are usually placed directly in the 'dist' folder.
  publish = "dist" # <--- CORRECTED THIS LINE
  # === FIX END ===

# This section configures Netlify Functions (or serverless functions).
# The @astrojs/netlify adapter typically handles functions and redirects automatically,
# so you might not strictly need the [functions] or [[redirects]] sections explicitly
# if the adapter handles them. However, if you prefer to keep them for clarity or
# specific customizations, ensure they are correctly formatted.
[functions]
  # The directory where Astro's Node adapter places the server-side build output.
  # This is typically 'dist/server' for @astrojs/node, but @astrojs/netlify
  # has its own internal structure (often '.netlify/functions/').
  # If you are using @astrojs/netlify, this 'directory' might not be necessary
  # or might need to point to the adapter's specific output location.
  # For now, let's keep it as is if it hasn't caused errors, but be aware.
  directory = "dist/server" # This might be managed automatically by @astrojs/netlify

# This section sets up redirects/rewrites.
[[redirects]]
  from = "/*" # Match all incoming requests
  to = "/.netlify/functions/entry" # Rewrite to your serverless function's endpoint
  status = 200 # Return a 200 OK status for successful rewrites
  force = true # Force the rewrite, even if a static file exists (important for SSR)

# You might also need to set environment variables for your build or runtime.
[build.environment]
  # Example: Make your backend API URL available to your frontend build.
  # This corresponds to `import.meta.env.PUBLIC_VERIDIA_API_POST` in your Astro code.
  # This is usually okay to be in netlify.toml if it's a publicly accessible API endpoint,
  # but if your backend API URL is also sensitive, you can move it to Netlify UI too.
  PUBLIC_VERIDIA_API_POST = "https://webanalyzer-veridia.onrender.com/web-analyzer"

