# netlify.toml

[build]
  command = "npm run build"
  # === FIX START ===
  # When using @astrojs/netlify adapter with output: 'server',
  # the static client assets are usually placed directly in the 'dist' folder.
  # Change 'dist/client' to 'dist'.
  publish = "dist" # <--- CORRECTED THIS LINE
  # === FIX END ===

# The @astrojs/netlify adapter typically handles functions and redirects automatically.
# You might not need explicit [functions] or [[redirects]] sections here,
# as the adapter generates them internally for Netlify.
# However, if you've explicitly added them and they are not causing errors,
# you can keep them. For simplicity, I'll show the minimal version.

# If you have custom environment variables you want to set for the build:
[build.environment]
  # Example: Make your backend API URL available to your frontend build.
  # This corresponds to `import.meta.env.PUBLIC_VERIDIA_API_POST` in your Astro code.
  # Replace with your actual deployed backend URL.
  PUBLIC_VERIDIA_API_POST = "https://webanalyzer-veridia.onrender.com/web-analyzer" # Replace with your deployed backend URL

  # Clerk environment variables (also set in Netlify UI for production)
  CLERK_SECRET_KEY = "sk_test_t1C7Rt4SIt7HrgIIS6ppwhSM03vkrhOLGXmuyczfjw" # Your Clerk secret key
  PUBLIC_CLERK_PUBLISHABLE_KEY = "pk_test_Y2hhbXBpb24tbXVkZmlzaC02LmNsZXJrLmFjY291bnRzLmRldiQ" # Your Clerk publishable key

# You might not need these explicit sections if the adapter handles them.
# If you do, ensure they are correctly formatted as per Netlify's docs.
# [[redirects]]
#   from = "/*"
#   to = "/.netlify/functions/entry" # Or whatever the adapter names the main function
#   status = 200
#   force = true
